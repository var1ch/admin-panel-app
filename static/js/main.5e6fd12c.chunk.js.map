{"version":3,"sources":["state/store/slices/dataSlice.js","state/store/index.js","serviceWorker.js","view/Pages/LogInPage/StyledLogInPage.jsx","view/Pages/LogInPage/components/FormComponent.jsx","view/Pages/AdminPanelPage/StyledAdminPanelPage.jsx","view/Pages/AdminPanelPage/components/FilterForm.jsx","view/Pages/AdminPanelPage/components/DataItem.jsx","view/Pages/AdminPanelPage/components/DataList.jsx","view/Pages/AdminPanelPage/components/Modal.jsx","index.js","view/Pages/LogInPage/LogInPage.jsx","view/Pages/AdminPanelPage/AdminPanelPage.jsx"],"names":["dataAdapter","createEntityAdapter","selectId","data","id","initialState","getInitialState","username","filterType","filterValue","dataSlice","createSlice","name","reducers","setUserNameAction","state","action","payload","addDataAction","addMany","setIsSelectedAction","updateOne","changes","isSelected","changeItemAction","height","skin","eyes","weight","gender","birth","deleteItemAction","removeOne","filterDataAction","dataSelector","getSelectors","selectAll","selectedItemSelector","createSelector","items","find","e","actions","store","configureStore","reducer","dataReducer","Boolean","window","location","hostname","match","StyledLogInPage","styled","div","Form","dispatch","useDispatch","useState","password","inputValues","setInputValues","className","value","type","placeholder","onChange","i","target","to","onClick","alert","StyledAdminPanel","props","isModalOpened","FilterForm","pattern","setPattern","DataItem","showModalHandler","DataList","useSelector","dataOnPage","setDataOnPage","currentIndex","useEffect","fetch","then","response","json","results","forEach","index","push","skin_color","eye_color","mass","birth_year","slice","map","item","prev","length","Modal","selectedItem","setChanges","ReactDOM","render","StrictMode","exact","from","path","component","document","title","useStore","getState","setIsModalOpened","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e6fd12c.chunk.js","sourcesContent":["import {\r\n  createSlice,\r\n  createEntityAdapter,\r\n  createSelector,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst dataAdapter = createEntityAdapter({\r\n  selectId: (data) => data.id,\r\n});\r\n\r\nconst initialState = dataAdapter.getInitialState({\r\n  username: \"\",\r\n  filterType: \"none\",\r\n  filterValue: \"none\",\r\n});\r\n\r\nconst dataSlice = createSlice({\r\n  name: \"data\",\r\n  initialState,\r\n  reducers: {\r\n    setUserNameAction: (state, action) =>\r\n      void (state.username = action.payload),\r\n    addDataAction: (state, action) =>\r\n      dataAdapter.addMany(state, action.payload),\r\n    setIsSelectedAction: (state, action) =>\r\n      dataAdapter.updateOne(state, {\r\n        id: action.payload.id,\r\n        changes: {\r\n          isSelected: action.payload.isSelected,\r\n        },\r\n      }),\r\n    changeItemAction: (state, action) =>\r\n      dataAdapter.updateOne(state, {\r\n        id: action.payload.id,\r\n        changes: {\r\n          name: action.payload.name,\r\n          height: action.payload.height,\r\n          skin: action.payload.skin,\r\n          eyes: action.payload.eyes,\r\n          weight: action.payload.weight,\r\n          gender: action.payload.gender,\r\n          birth: action.payload.birth,\r\n        },\r\n      }),\r\n    deleteItemAction: (state, action) =>\r\n      dataAdapter.removeOne(state, action.payload),\r\n    filterDataAction: (state, action) => {\r\n      state.filterType = action.payload.filterType;\r\n      state.filterValue = action.payload.filterValue;\r\n    },\r\n  },\r\n});\r\n\r\nconst dataSelectors = dataAdapter.getSelectors((state) => state.data);\r\n\r\nexport const dataSelector = dataSelectors.selectAll;\r\n\r\n// export const dataSelector = createSelector(allDataSelector, (items) => {\r\n//   switch (items.filterType) {\r\n//     case \"bySkin\":\r\n//       return dataState.filter((i) => i.skin === dataState.filterValue);\r\n//     case \"byEyes\":\r\n//       return dataState.filter((i) => i.skin === dataState.filterValue);\r\n//     case \"byGender\":\r\n//       return dataState.filter((i) => i.skin === dataState.filterValue);\r\n//     default:\r\n//       return items;\r\n//   }\r\n// });\r\n\r\nexport const selectedItemSelector = createSelector(dataSelector, (items) =>\r\n  items.find((e) => e.isSelected === true),\r\n);\r\n\r\nexport const {\r\n  setUserNameAction,\r\n  addDataAction,\r\n  setIsSelectedAction,\r\n  changeItemAction,\r\n  deleteItemAction,\r\n  filterDataAction,\r\n} = dataSlice.actions;\r\n\r\nexport default dataSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport dataReducer from \"./slices/dataSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    data: dataReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLogInPage = styled.div`\r\n  min-width: 720px;\r\n  max-width: 720px;\r\n  max-height: 100vh;\r\n  min-height: 100vh;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .form-wrapper {\r\n    padding-left: 200px;\r\n    padding-right: 200px;\r\n    flex: 1;\r\n    .form-container {\r\n      box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n      /* background-color: #fcfcfc; */\r\n      border-radius: 5px;\r\n      padding: 35px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      a {\r\n        text-align: center;\r\n        padding: 10px;\r\n        background-color: #5353fa;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        color: white;\r\n        border-radius: 3px;\r\n      }\r\n      form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        input {\r\n          outline: none;\r\n          border: 0;\r\n          border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n          margin-bottom: 35px;\r\n          padding: 10px;\r\n          &:focus {\r\n            border-bottom: 1px solid blue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setUserNameAction } from \"../../../../state\";\r\n\r\nexport default function Form() {\r\n  const dispatch = useDispatch();\r\n  const [inputValues, setInputValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <div className=\"form-container\">\r\n        <form>\r\n          <input\r\n            value={inputValues.username}\r\n            type=\"text\"\r\n            placeholder=\"USERNAME\"\r\n            onChange={(i) =>\r\n              setInputValues({ ...inputValues, username: i.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"PASSWORD\"\r\n            value={inputValues.password}\r\n            onChange={(i) =>\r\n              setInputValues({ ...inputValues, password: i.target.value })\r\n            }\r\n          />\r\n        </form>\r\n        <Link\r\n          to={\r\n            inputValues.username === \"\" || inputValues.password === \"\"\r\n              ? \"sign-in\"\r\n              : \"admin-panel\"\r\n          }\r\n          onClick={() => {\r\n            if (inputValues.username !== \"\" || inputValues.password !== \"\") {\r\n              dispatch(setUserNameAction(inputValues.username));\r\n            } else {\r\n              alert(\"Please fill the USERNAME and PASSWORD fields\");\r\n            }\r\n          }}\r\n        >\r\n          Sign-In\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledAdminPanel = styled.div`\r\n  display: flex;\r\n  max-height: 100vh;\r\n  min-height: 100vh;\r\n  position: relative;\r\n  input {\r\n    outline: none;\r\n    border: 0;\r\n    border-bottom: 1px solid rgba(100, 100, 111, 0.2);\r\n    margin-bottom: 35px;\r\n    padding: 10px 0 10px 0;\r\n    margin-right: 10px;\r\n    font-size: 1rem;\r\n    width: 200px;\r\n    &:focus {\r\n      border-bottom: 1px solid blue;\r\n    }\r\n  }\r\n  button {\r\n    text-align: center;\r\n    padding: 10px 35px 10px 35px;\r\n    border: none;\r\n    background-color: #2d2dff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    color: white;\r\n    border-radius: 3px;\r\n    margin: 10px;\r\n    box-shadow: rgba(100, 100, 111, 0.35) 0px 7px 7px 0px;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n    &:active {\r\n      box-shadow: none;\r\n      background-color: #6262ff;\r\n    }\r\n  }\r\n  div.left-panel {\r\n    flex: 1;\r\n    background-color: #3f3ffc;\r\n    color: white;\r\n    font-size: 2rem;\r\n    div.panel-header {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      padding: 16px;\r\n      background-color: #5353fa;\r\n      text-align: center;\r\n      span {\r\n        font-size: 1.3rem;\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n  div.right-panel {\r\n    flex: 7;\r\n    padding: 35px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    div.filter-form {\r\n      padding: 15px;\r\n      border: 1px solid rgba(100, 100, 111, 0.2);\r\n      border-radius: 5px;\r\n    }\r\n    ul.data-list {\r\n      margin-top: 35px;\r\n      li.data-item {\r\n        margin-top: 10px;\r\n        padding: 10px;\r\n        border: 1px solid rgba(100, 100, 111, 0.2);\r\n        border-radius: 5px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        &:hover {\r\n          border: 1px solid blue;\r\n        }\r\n        span {\r\n          display: inline-block;\r\n          width: 190px;\r\n          text-align: left;\r\n          &:hover {\r\n            cursor: default;\r\n          }\r\n        }\r\n        span.id {\r\n          width: initial;\r\n        }\r\n        div.options {\r\n          color: #8484ff;\r\n          .button:hover {\r\n            cursor: pointer;\r\n            color: #2d2dff;\r\n          }\r\n          .edit {\r\n            margin-right: 10px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    div.modal {\r\n      position: absolute;\r\n      z-index: 999;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      display: ${(props) => (props.isModalOpened ? \"flex\" : \"none\")};\r\n      flex-direction: column;\r\n      padding: 95px;\r\n      background-color: white;\r\n      border-radius: 5px;\r\n      div.input-row {\r\n        display: flex;\r\n        span {\r\n          padding: 10px 10px 10px 0;\r\n          width: 90px;\r\n        }\r\n        input {\r\n          margin-right: 0;\r\n          width: 250px;\r\n        }\r\n      }\r\n\r\n      button {\r\n        margin: 10px 0 0 0;\r\n      }\r\n      div.buttons-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n      }\r\n    }\r\n    div.pagination-bar {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n      gap: 10px;\r\n      color: #6666ff;\r\n      font-size: 2rem;\r\n      padding: 10px 0 10px 0;\r\n      span {\r\n        color: #2d2dff;\r\n        font-size: 1.5rem;\r\n      }\r\n      & .pagination-button:hover {\r\n        color: #2d2dff;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  div.modal-overlay {\r\n    position: relative;\r\n    display: ${(props) => (props.isModalOpened ? \"contents\" : \"none\")};\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useStore } from \"react-redux\";\r\nimport { filterDataAction } from \"../../../../state\";\r\n\r\nexport default function FilterForm() {\r\n  const dispatch = useDispatch();\r\n  // const [skinInputValue, setSkinInputValue] = useState(\"\");\r\n  // const store = useStore();\r\n  const [pattern, setPattern] = useState({ skin: \"\", eyes: \"\", gender: \"\" });\r\n\r\n  return (\r\n    <div className=\"filter-form\">\r\n      <input\r\n        value={pattern.skin}\r\n        type=\"text\"\r\n        placeholder=\"SKIN\"\r\n        onChange={(i) => setPattern({ ...pattern, skin: i.target.value })}\r\n      />\r\n      <input\r\n        value={pattern.eyes}\r\n        type=\"text\"\r\n        placeholder=\"EYES\"\r\n        onChange={(i) => setPattern({ ...pattern, eyes: i.target.value })}\r\n      />\r\n      <input\r\n        value={pattern.gender}\r\n        type=\"text\"\r\n        placeholder=\"GENDER\"\r\n        onChange={(i) => setPattern({ ...pattern, gender: i.target.value })}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          // dispatch(\r\n          //   filterDataAction({\r\n          //     filterType: \"bySkin\",\r\n          //     filterValue: skinInputValue,\r\n          //   }),\r\n          // );\r\n        }}\r\n      >\r\n        Show\r\n      </button>\r\n      <button onClick={() => setPattern({ skin: \"\", eyes: \"\", gender: \"\" })}>\r\n        Clear\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteItemAction, setIsSelectedAction } from \"../../../../state\";\r\nimport { ImCross } from \"react-icons/im\";\r\nimport { ImPencil } from \"react-icons/im\";\r\n\r\nexport default function DataItem(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <li className=\"data-item\">\r\n      <span className=\"id\">ID: {props.id}</span>\r\n      <span>Name: {props.name}</span>\r\n      <span>Height: {props.height}cm</span>\r\n      <span>Skin: {props.skin}</span>\r\n      <span>Eyes: {props.eyes}</span>\r\n      <span>Weight: {props.weight}kg</span>\r\n      <span>Gender: {props.gender}</span>\r\n      <span>Birth: {props.birth}</span>\r\n      <div className=\"options\">\r\n        <ImPencil\r\n          className=\"button edit\"\r\n          onClick={() => {\r\n            dispatch(\r\n              setIsSelectedAction({\r\n                id: props.id,\r\n                isSelected: true,\r\n              }),\r\n            );\r\n            props.showModalHandler();\r\n          }}\r\n        />\r\n        <ImCross\r\n          className=\"button remove\"\r\n          onClick={() => dispatch(deleteItemAction(props.id))}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addDataAction, dataSelector } from \"../../../../state\";\r\nimport DataItem from \"./DataItem\";\r\nimport { ImCircleLeft, ImCircleRight } from \"react-icons/im\";\r\n\r\nexport default function DataList(props) {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector(dataSelector);\r\n  const [dataOnPage, setDataOnPage] = useState(2);\r\n\r\n  const currentIndex = dataOnPage - 2;\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://swapi.dev/api/people\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const data = [];\r\n        json.results.forEach((i, index) => {\r\n          data.push({\r\n            id: index,\r\n            name: i.name,\r\n            height: i.height,\r\n            skin: i.skin_color,\r\n            eyes: i.eye_color,\r\n            weight: i.mass,\r\n            gender: i.gender,\r\n            birth: i.birth_year,\r\n            isSelected: false,\r\n          });\r\n        });\r\n        dispatch(addDataAction(data));\r\n      });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"data-list\">\r\n        {data.slice(currentIndex, dataOnPage).map((item) => (\r\n          <DataItem\r\n            showModalHandler={props.showModalHandler}\r\n            key={item.id}\r\n            id={item.id}\r\n            name={item.name}\r\n            height={item.height}\r\n            skin={item.skin}\r\n            eyes={item.eyes}\r\n            weight={item.weight}\r\n            gender={item.gender}\r\n            birth={item.birth}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className=\"pagination-bar\">\r\n        <ImCircleLeft\r\n          className=\"pagination-button\"\r\n          onClick={() => setDataOnPage((prev) => (prev <= 2 ? prev : prev - 2))}\r\n        />\r\n        <span>{`${\r\n          currentIndex === 0 ? \"1\" : currentIndex\r\n        } - ${dataOnPage}`}</span>\r\n        <ImCircleRight\r\n          className=\"pagination-button\"\r\n          onClick={() =>\r\n            setDataOnPage((prev) => (prev >= data.length ? prev : prev + 2))\r\n          }\r\n        />\r\n        <span>Total: {data.length}</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeItemAction, setIsSelectedAction } from \"../../../../state\";\r\n\r\nexport default function Modal({ selectedItem, showModalHandler }) {\r\n  const [changes, setChanges] = useState(selectedItem);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"input-row\">\r\n        <span>NAME: </span>\r\n        <input\r\n          value={changes.name}\r\n          type=\"text\"\r\n          placeholder=\"NAME\"\r\n          onChange={(i) => setChanges({ ...changes, name: i.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"input-row\">\r\n        <span>HEIGHT: </span>\r\n        <input\r\n          value={changes.height}\r\n          type=\"text\"\r\n          placeholder=\"HEIGHT\"\r\n          onChange={(i) => setChanges({ ...changes, height: i.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"input-row\">\r\n        <span>SKIN: </span>\r\n        <input\r\n          value={changes.skin}\r\n          type=\"text\"\r\n          placeholder=\"SKIN\"\r\n          onChange={(i) => setChanges({ ...changes, skin: i.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"input-row\">\r\n        <span>EYES: </span>\r\n        <input\r\n          value={changes.eyes}\r\n          type=\"text\"\r\n          placeholder=\"EYES\"\r\n          onChange={(i) => setChanges({ ...changes, eyes: i.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"input-row\">\r\n        <span>WEIGHT: </span>\r\n        <input\r\n          value={changes.weight}\r\n          type=\"text\"\r\n          placeholder=\"WEIGHT\"\r\n          onChange={(i) => setChanges({ ...changes, weight: i.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"input-row\">\r\n        <span>GENDER: </span>\r\n        <input\r\n          value={changes.gender}\r\n          type=\"text\"\r\n          placeholder=\"GENDER\"\r\n          onChange={(i) => setChanges({ ...changes, gender: i.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"input-row\">\r\n        <span>BIRTH: </span>\r\n        <input\r\n          value={changes.birth}\r\n          type=\"text\"\r\n          placeholder=\"BIRTH\"\r\n          onChange={(i) => setChanges({ ...changes, birth: i.target.value })}\r\n        />\r\n      </div>\r\n      <div className=\"buttons-container\">\r\n        <button\r\n          onClick={() => {\r\n            dispatch(changeItemAction({ id: selectedItem?.id, ...changes }));\r\n            dispatch(\r\n              setIsSelectedAction({ id: selectedItem?.id, isSelected: false }),\r\n            );\r\n            showModalHandler();\r\n          }}\r\n        >\r\n          CHANGE ITEM\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            dispatch(\r\n              setIsSelectedAction({ id: selectedItem?.id, isSelected: false }),\r\n            );\r\n            showModalHandler();\r\n          }}\r\n        >\r\n          CLOSE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { store } from \"./state/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\nimport LogInPage from \"./view/Pages/LogInPage/LogInPage\";\r\nimport AdminPanelPage from \"./view/Pages/AdminPanelPage/AdminPanelPage\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Switch>\r\n          <Redirect exact from=\"/\" to=\"/sign-in\" />\r\n          <Route path=\"/sign-in\" component={LogInPage} title=\"Sign-In\" />\r\n          <Route\r\n            path=\"/admin-panel\"\r\n            component={AdminPanelPage}\r\n            title=\"Admin Panel\"\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useEffect } from \"react\";\r\nimport { StyledLogInPage } from \"./StyledLogInPage\";\r\nimport Form from \"./components/FormComponent\";\r\n\r\nexport default function LoginPage() {\r\n  useEffect(() => {\r\n    document.title = \"Admin Panel\";\r\n  }, []);\r\n  return (\r\n    <StyledLogInPage>\r\n      <Form />\r\n    </StyledLogInPage>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { StyledAdminPanel } from \"./StyledAdminPanelPage\";\r\nimport { ImHome } from \"react-icons/im\";\r\nimport FilterForm from \"./components/FilterForm\";\r\nimport DataList from \"./components/DataList\";\r\nimport Modal from \"./components/Modal\";\r\nimport { selectedItemSelector } from \"../../../state\";\r\nimport { useSelector, useStore } from \"react-redux\";\r\n\r\nexport default function AdminPanel() {\r\n  const selectedItem = useSelector(selectedItemSelector);\r\n  const username = useStore().getState().data.username;\r\n  const [isModalOpened, setIsModalOpened] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Admin Panel\";\r\n  }, []);\r\n\r\n  const showModalHandler = () => {\r\n    setIsModalOpened(!isModalOpened);\r\n  };\r\n\r\n  return (\r\n    <StyledAdminPanel isModalOpened={isModalOpened}>\r\n      <div className=\"left-panel\">\r\n        <div className=\"panel-header\">\r\n          <ImHome />\r\n          <span>\r\n            {username === \"\" ? \"Hello, USERNAME\" : `Hello, ${username}`}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"right-panel\">\r\n        <FilterForm />\r\n        <DataList showModalHandler={showModalHandler} />\r\n        {selectedItem ? (\r\n          <Modal\r\n            showModalHandler={showModalHandler}\r\n            selectedItem={selectedItem}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div className=\"modal-overlay\"></div>\r\n    </StyledAdminPanel>\r\n  );\r\n}\r\n"],"sourceRoot":""}