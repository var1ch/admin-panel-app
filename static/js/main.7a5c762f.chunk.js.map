{"version":3,"sources":["state/store/slices/dataSlice.js","state/store/index.js","serviceWorker.js","view/Pages/LogInPage/StyledLogInPage.jsx","view/Pages/LogInPage/components/FormComponent.jsx","view/Pages/LogInPage/LogInPage.jsx","view/Pages/AdminPanelPage/StyledAdminPanelPage.jsx","view/Pages/AdminPanelPage/components/FilterForm.jsx","view/Pages/AdminPanelPage/components/DataItem.jsx","view/Pages/AdminPanelPage/components/DataList.jsx","view/Pages/AdminPanelPage/AdminPanelPage.jsx","index.js"],"names":["dataAdapter","createEntityAdapter","selectId","data","id","initialState","getInitialState","dataSlice","createSlice","name","reducers","addDataAction","state","action","setAll","payload","changeItemAction","updateOne","changes","allDataSelector","getSelectors","selectAll","actions","store","configureStore","reducer","dataReducer","Boolean","window","location","hostname","match","StyledLogInPage","styled","div","Form","props","onChangeUsernameHandler","value","setState","username","onChangePasswordHandler","password","className","this","type","placeholder","onChange","i","target","to","React","Component","LoginPage","document","title","StyledAdminPanel","FilterForm","DataItem","key","DataList","dispatch","useDispatch","useSelector","useEffect","fetch","then","response","json","results","forEach","push","Math","random","map","item","AdminPanelPage","ReactDOM","render","StrictMode","exact","from","path","component","LogInPage","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a5c762f.chunk.js","sourcesContent":["import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\n\r\nconst dataAdapter = createEntityAdapter({\r\n  selectId: (data) => data.id,\r\n});\r\n\r\nconst initialState = dataAdapter.getInitialState();\r\n\r\nconst dataSlice = createSlice({\r\n  name: \"data\",\r\n  initialState,\r\n  reducers: {\r\n    addDataAction: (state, action) => dataAdapter.setAll(state, action.payload),\r\n    changeItemAction: (state, action) =>\r\n      dataAdapter.updateOne(state, {\r\n        id: action.payload.id,\r\n        changes: {\r\n          name: action.payload.name,\r\n        },\r\n      }),\r\n  },\r\n});\r\n\r\nconst dataSelectors = dataAdapter.getSelectors((state) => state.data);\r\n\r\nexport const allDataSelector = dataSelectors.selectAll;\r\n\r\nexport const { addDataAction, changeItemAction } = dataSlice.actions;\r\n\r\nexport default dataSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport dataReducer from \"./slices/dataSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    data: dataReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLogInPage = styled.div`\r\n  min-width: 720px;\r\n  max-width: 720px;\r\n  max-height: 100vh;\r\n  min-height: 100vh;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .form-wrapper {\r\n    padding-left: 200px;\r\n    padding-right: 200px;\r\n    flex: 1;\r\n    .form-container {\r\n      box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n      /* background-color: #fcfcfc; */\r\n      border-radius: 5px;\r\n      padding: 35px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      a {\r\n        text-align: center;\r\n        padding: 10px;\r\n        background-color: #5353fa;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        color: white;\r\n        border-radius: 3px;\r\n      }\r\n      form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        input {\r\n          outline: none;\r\n          border: 0;\r\n          border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n          margin-bottom: 35px;\r\n          padding: 10px;\r\n          &:focus {\r\n            border-bottom: 1px solid blue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  // =========== REWRITE THIS!!! ===========================================\r\n  onChangeUsernameHandler = (value) => this.setState({ username: value });\r\n  onChangePasswordHandler = (value) => this.setState({ password: value });\r\n  // =========== REWRITE THIS!!! ===========================================\r\n  render() {\r\n    return (\r\n      <div className=\"form-wrapper\">\r\n        <div className=\"form-container\">\r\n          <form>\r\n            <input\r\n              value={this.state.username}\r\n              type=\"text\"\r\n              placeholder=\"USERNAME\"\r\n              onChange={(i) => this.onChangeUsernameHandler(i.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"PASSWORD\"\r\n              value={this.state.password}\r\n              onChange={(i) => this.onChangePasswordHandler(i.target.value)}\r\n            />\r\n          </form>\r\n          <Link to=\"admin-panel\">Sign-In</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { StyledLogInPage } from \"./StyledLogInPage\";\r\nimport Form from \"./components/FormComponent\";\r\n\r\nexport default class LoginPage extends React.Component {\r\n  componentDidMount() {\r\n    document.title = \"Sign-In\";\r\n  }\r\n  render() {\r\n    return (\r\n      <StyledLogInPage>\r\n        <Form />\r\n      </StyledLogInPage>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledAdminPanel = styled.div`\r\n  display: flex;\r\n  max-height: 100vh;\r\n  min-height: 100vh;\r\n  div.left-panel {\r\n    flex: 1;\r\n    background-color: #3f3ffc;\r\n    color: white;\r\n    div.panel-header {\r\n      padding: 16px;\r\n      background-color: #5353fa;\r\n      text-align: center;\r\n      span {\r\n        font-size: 1.3rem;\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n  div.right-panel {\r\n    flex: 7;\r\n    padding: 35px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    div.filter-form {\r\n      padding: 25px;\r\n      border: 1px solid rgba(100, 100, 111, 0.2);\r\n      border-radius: 5px;\r\n    }\r\n    ul.data-list {\r\n      margin-top: 35px;\r\n      li.data-item {\r\n        margin-top: 10px;\r\n        padding: 10px;\r\n        border: 1px solid rgba(100, 100, 111, 0.2);\r\n        border-radius: 5px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        span {\r\n          display: inline-block;\r\n          width: 200px;\r\n        }\r\n        div.options {\r\n          align-self: flex-end;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nexport default function FilterForm() {\r\n  return (\r\n    <div className=\"filter-form\">\r\n      <input type=\"text\" />\r\n      <input type=\"text\" />\r\n      <input type=\"text\" />\r\n      <button>Show</button>\r\n      <button>Clear</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function DataItem(props) {\r\n  return (\r\n    <li key={props.key} className=\"data-item\">\r\n      <span>{props.name}</span>\r\n      <span>height</span>\r\n      <span>blah</span>\r\n      <span>blah</span>\r\n      <span>blah</span>\r\n      <span>blah</span>\r\n      <div className=\"options\">\r\n        <button>Edit</button>\r\n        <button>Delete</button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addDataAction, allDataSelector } from \"../../../../state\";\r\nimport DataItem from \"./DataItem\";\r\n\r\nexport default function DataList() {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector(allDataSelector);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://swapi.dev/api/people\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const data = [];\r\n        json.results.forEach((i) => {\r\n          data.push({\r\n            id: Math.random(),\r\n            name: i.name,\r\n          });\r\n        });\r\n        dispatch(addDataAction(data));\r\n      });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className=\"data-list\">\r\n      {data.map((item) => (\r\n        <DataItem key={Math.random()} name={item.name} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyledAdminPanel } from \"./StyledAdminPanelPage\";\r\nimport { ImHome } from \"react-icons/im\";\r\nimport FilterForm from \"./components/FilterForm\";\r\nimport DataList from \"./components/DataList\";\r\n\r\nexport default class AdminPanelPage extends React.Component {\r\n  componentDidMount() {\r\n    document.title = \"Admin Panel\";\r\n  }\r\n  render() {\r\n    return (\r\n      <StyledAdminPanel>\r\n        <div className=\"left-panel\">\r\n          <div className=\"panel-header\">\r\n            <ImHome />\r\n            <span>Name</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"right-panel\">\r\n          <FilterForm />\r\n          <DataList />\r\n        </div>\r\n      </StyledAdminPanel>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { store } from \"./state/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport LogInPage from \"./view/Pages/LogInPage/LogInPage\";\nimport AdminPanelPage from \"./view/Pages/AdminPanelPage/AdminPanelPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/sign-in\" />\n          <Route path=\"/sign-in\" component={LogInPage} title=\"Sign-In\" />\n          <Route\n            path=\"/admin-panel\"\n            component={AdminPanelPage}\n            title=\"Admin Panel\"\n          />\n        </Switch>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}